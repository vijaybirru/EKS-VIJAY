Pre-req

1.Ec2 with IAM policy with admin access to access other services in aws
2.Install aws cli
3.AWS configure with normal user(ec2-user)
4.Install Kubectl
5.Install eksctl
6.Install Git

1. 1.Ec2 with IAM policy with admin access to access other services in aws************

ec2 is created with amazon linux, where aws cli is installed
and attached an iam role to ec2 with full access

2. Install aws cli*************************************************************

since aws cli is already available , if not install it 
[root@ip-172-31-94-92 ~]# aws --version
aws-cli/1.18.147 Python/2.7.18 Linux/5.10.102-99.473.amzn2.x86_64 botocore/1.18. 
https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html

3. AWS configure with normal user (ec2-user)*****************************************
create an admin user in IAM(AWS)

[root@ip-172-31-94-92 ~]# aws configure
AWS Access Key ID [None]: 
AWS Secret Access Key [None]:
Default region name [None]: us-east-1
Default output format [None]:

checking whether you can see aws resources using aws cli commands

[root@ip-172-31-94-92 ~]# aws s3 ls
2022-02-05 04:29:01 prakashusa

4.Install Kubectl**********************************************************************
                                                                                                            6
[root@ip-172-31-94-92 ~]# cd /opt/

reference
https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html


[root@ip-172-31-94-92 opt]# curl -o kubectl https://amazon-eks.s3.us-west-2.amaz                                                                                                             onaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 38.3M  100 38.3M    0     0  14.4M      0  0:00:02  0:00:02 --:--:-- 14.4M
[root@ip-172-31-94-92 opt]# curl -o kubectl.sha256 https://amazon-eks.s3.us-west                                                                                                             -2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl.sha256
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    73  100    73    0     0    241      0 --:--:-- --:--:-- --:--:--   241
[root@ip-172-31-94-92 opt]# openssl sha1 -sha256 kubectl
SHA256(kubectl)= e84ff8c607b2a10f635c312403f9ede40a045404957e55adcf3d663f9e32c63                                                                                                             0
[root@ip-172-31-94-92 opt]# chmod +x ./kubectl
[root@ip-172-31-94-92 opt]# mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl                                                                                                              && export PATH=$PATH:$HOME/bin
[root@ip-172-31-94-92 opt]# echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
[root@ip-172-31-94-92 opt]# kubectl version --short --client
Client Version: v1.20.4-eks-6b7464

[ec2-user@ip-172-31-94-92 ~]$ kubectl version
-bash: kubectl: command not found

5.Install eksctl*********************************************************************
reference
https://docs.aws.amazon.com/eks/latest/userguide/eksctl.html

[root@ip-172-31-94-92 opt]# curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp                                                                                                            rks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C                                                                                                              /tmp
[root@ip-172-31-94-92 opt]# sudo mv /tmp/eksctl /usr/local/bin
[root@ip-172-31-94-92 opt]# eksctl version
-bash: eksctl: command not found

switch to ec2-user and try

[ec2-user@ip-172-31-94-92 ~]$ eksctl version 
0.89.0

6.Install Git

[root@ip-172-31-94-92 opt]# git --version
git version 2.32.0


this is how we can install eksctl and kubectl to create an cluster in aws EKS

------------------------------

[ec2-user@ip-172-31-94-92 ~]$ eksctl create cluster --name dev  --region us-east-1 --nodegroup-name standard-workers --node-type t3.micro --nodes 3 --nodes-min 1 --nodes-max 4 --managed
2022-03-30 23:38:27 [ℹ]  eksctl version 0.89.0
2022-03-30 23:38:27 [ℹ]  using region us-east-1
2022-03-30 23:38:27 [ℹ]  setting availability zones to [us-east-1f us-east-1d]
2022-03-30 23:38:27 [ℹ]  subnets for us-east-1f - public:192.168.0.0/19 private:192.168.64.0/19
2022-03-30 23:38:27 [ℹ]  subnets for us-east-1d - public:192.168.32.0/19 private:192.168.96.0/19
2022-03-30 23:38:27 [ℹ]  nodegroup "standard-workers" will use "" [AmazonLinux2/1.21]
2022-03-30 23:38:27 [ℹ]  using Kubernetes version 1.21
2022-03-30 23:38:27 [ℹ]  creating EKS cluster "dev" in "us-east-1" region with managed nodes
2022-03-30 23:38:27 [ℹ]  will create 2 separate CloudFormation stacks for cluster itself and the initial managed nodegroup
2022-03-30 23:38:27 [ℹ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=us-east-1 --cluster=dev'
2022-03-30 23:38:27 [ℹ]  Kubernetes API endpoint access will use default of {publicAccess=true, privateAccess=false} for cluster "dev" in "us-east-1"
2022-03-30 23:38:27 [ℹ]  CloudWatch logging will not be enabled for cluster "dev" in "us-east-1"
2022-03-30 23:38:27 [ℹ]  you can enable it with 'eksctl utils update-cluster-logging --enable-types={SPECIFY-YOUR-LOG-TYPES-HERE (e.g. all)} --region=us-east-1 --cluster=dev'
2022-03-30 23:38:27 [ℹ]
2 sequential tasks: { create cluster control plane "dev",
    2 sequential sub-tasks: {
        wait for control plane to become ready,
        create managed nodegroup "standard-workers",
    }
}
2022-03-30 23:38:27 [ℹ]  building cluster stack "eksctl-dev-cluster"
2022-03-30 23:38:27 [ℹ]  deploying stack "eksctl-dev-cluster"
2022-03-30 23:38:57 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:39:27 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:40:27 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:41:27 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:42:27 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:43:27 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:44:27 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:45:27 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:46:27 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:47:28 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:48:28 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:49:28 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"
2022-03-30 23:50:28 [ℹ]  waiting for CloudFormation stack "eksctl-dev-cluster"



2022-03-30 23:52:28 [ℹ]  building managed nodegroup stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:52:29 [ℹ]  deploying stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:52:29 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:52:48 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:53:06 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:53:21 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:53:37 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:53:57 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:54:14 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:54:32 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:54:50 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:55:10 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:55:27 [ℹ]  waiting for CloudFormation stack "eksctl-dev-nodegroup-standard-workers"
2022-03-30 23:55:28 [ℹ]  waiting for the control plane availability...
2022-03-30 23:55:28 [✔]  saved kubeconfig as "/home/ec2-user/.kube/config"
2022-03-30 23:55:28 [ℹ]  no tasks
2022-03-30 23:55:28 [✔]  all EKS cluster resources for "dev" have been created
2022-03-30 23:55:28 [ℹ]  nodegroup "standard-workers" has 3 node(s)
2022-03-30 23:55:28 [ℹ]  node "ip-192-168-13-204.ec2.internal" is ready
2022-03-30 23:55:28 [ℹ]  node "ip-192-168-43-158.ec2.internal" is ready
2022-03-30 23:55:28 [ℹ]  node "ip-192-168-6-157.ec2.internal" is ready
2022-03-30 23:55:28 [ℹ]  waiting for at least 1 node(s) to become ready in "standard-workers"
2022-03-30 23:55:28 [ℹ]  nodegroup "standard-workers" has 3 node(s)
2022-03-30 23:55:28 [ℹ]  node "ip-192-168-13-204.ec2.internal" is ready
2022-03-30 23:55:28 [ℹ]  node "ip-192-168-43-158.ec2.internal" is ready
2022-03-30 23:55:28 [ℹ]  node "ip-192-168-6-157.ec2.internal" is ready
2022-03-30 23:55:29 [ℹ]  kubectl command should work with "/home/ec2-user/.kube/config", try 'kubectl get nodes'
2022-03-30 23:55:29 [✔]  EKS cluster "dev" in "us-east-1" region is ready
[ec2-user@ip-172-31-94-92 ~]$
[ec2-user@ip-172-31-94-92 ~]$
[ec2-user@ip-172-31-94-92 ~]$
[ec2-user@ip-172-31-94-92 ~]$ eksctl get clusters
2022-03-30 23:55:44 [ℹ]  eksctl version 0.89.0
2022-03-30 23:55:44 [ℹ]  using region us-east-1
NAME    REGION          EKSCTL CREATED
dev     us-east-1       True

so cluster dev is created

-------------------------------------

